# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
 
trigger:
- master
 
pool:
  name: Azure Pipelines

# Set variables
variables:
  directory: $(System.DefaultWorkingDirectory)

stages:
- stage: dev_build
  displayName: Build Dev Solution
  jobs:  
  - job: Build
    displayName: Build and Publish Solution
    steps:
    - task: NodeTool@0
      displayName: 'Install node.js'
      inputs:
        versionSpec: '10.x'

    - script: 
        npm install
      displayName: 'npm install'
      workingDirectory: $(directory)
 
    - script: 
        set "REACT_APP_STAGE=$(stage)" && npm run build
      displayName: 'npm build'
      workingDirectory: $(directory)

    - task: CopyFiles@2
      displayName: 'Copy web.config to build folder'
      inputs:
        SourceFolder: '$(directory)/'
        Contents: 'web.config'
        TargetFolder: '$(directory)/build'

    - task: PowerShell@2
      displayName: 'Replace config.js values for Development'
      inputs:
        targetType: 'inline'
        script: |
          $config_dest = "$(directory)\build\config.js"
          $content = "window.config = { CREDENTIALS_API_STATUS:'https://dev-waverify-api.doh.wa.gov', CREDENTIALS_API_QR:'https://dev-waverify-api.doh.wa.gov', CREDENTIALS_GA_DEPARTMENT: ''};"
          echo $content | Set-Content $config_dest;
 
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: 'build'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs: 
        pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

- stage: dev_deployment
  displayName: Deploy Solution to Development
  dependsOn: [dev_build]
  jobs:
    - deployment: dev_deployment
      displayName: Deploy to Development Environment
      environment: Development
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              displayName: 'Download Artifact'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deployment'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'webApp'
                WebAppName: 'app-waverify-ui-dev'
                packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'

- stage: qa_deployment
  displayName: Build & Deploy Solution to QA
  dependsOn: [dev_deployment]
  jobs:
    - deployment: qa_deployment
      displayName: Build & Deploy to QA Environment
      environment: QA
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@1
              displayName: 'Download Artifact'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: PowerShell@2
              displayName: 'Replace appsettings.json values for Development'
              inputs:
                targetType: 'inline'
                script: |
                  $config_dest = "$(System.ArtifactsDirectory)/**/*.zip/config.js"
                  $content = "window.config = { CREDENTIALS_API_STATUS:'https://qa-waverify-api.doh.wa.gov', CREDENTIALS_API_QR:'https://qa-waverify-api.doh.wa.gov', CREDENTIALS_GA_DEPARTMENT: ''};"
                  echo $content | Set-Content $config_dest;
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deployment'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'webApp'
                WebAppName: 'app-waverify-ui-qa'
                packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'

- stage: prod_deployment
  displayName: Build & Deploy Solution to Production
  dependsOn: [qa_deployment]
  jobs:
    - deployment: prod_deployment
      displayName: Build & Deploy to Production Environment
      environment: Production
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: PowerShell@2
              displayName: 'Replace config.js values for Production'
              inputs:
                targetType: 'inline'
                script: |
                  $config_dest = "$(directory)\build\config.js"
                  $content = "window.config = { CREDENTIALS_API_STATUS:'https://waverify-api.doh.wa.gov', CREDENTIALS_API_QR:'https://waverify-api.doh.wa.gov', CREDENTIALS_GA_DEPARTMENT: ''};"
                  echo $content | Set-Content $config_dest;
            - task: ArchiveFiles@2
              displayName: 'Archive files'
              inputs:
                rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
                includeRootFolder: false
                archiveType: zip
                archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
                replaceExistingArchive: true
            - task: PublishBuildArtifacts@1
              displayName: 'Publish Build Artifacts'
              inputs: 
                pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            - task: DownloadBuildArtifacts@1
              displayName: 'Download Artifact'
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure App Service Deployment'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
                appType: 'webApp'
                WebAppName: 'app-waverify-ui-prod'
                packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'