# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
 
trigger:
- master
 
pool:
  vmImage: 'windows-latest'

# Set variables
variables:
  directory: $(System.DefaultWorkingDirectory)
  stage: development
 
steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'
 
- script: 
    npm install
  displayName: 'npm install'
  workingDirectory: $(directory)
 
- script: 
    set "REACT_APP_STAGE=$(stage)" && npm run build
  displayName: 'npm build'
  workingDirectory: $(directory)

#- task: PowerShell@2
#  inputs:
#    targetType: 'inline'
#    script: |
#      $config_dest = "$(directory)\build\config.js"
#      $content = "window.config = { CREDENTIALS_API_STATUS:'https://app-waverify-api-dev.azurewebsites.net', CREDENTIALS_API_QR:'https://app-waverify-api-dev.azurewebsites.net', CREDENTIALS_GA_DEPARTMENT: ''};"
#      echo $content | Set-Content $config_dest;

- task: CopyFiles@2
  displayName: 'Copy files'
  inputs:
    sourceFolder: '$(directory)/build' 
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    cleanTargetFolder: true
 
- task: ArchiveFiles@2
  displayName: 'Archive files'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveType: zip
    archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    replaceExistingArchive: true
 
- task: PublishBuildArtifacts@1
  displayName: 'Publish Build Artifacts'
  inputs: 
    pathtoPublish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip

- task: DownloadBuildArtifacts@1
  displayName: Download Artifact
  inputs:
    buildType: 'current'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $config_dest = "$(System.ArtifactsDirectory)\_$(Build.DefinitionName)\drop\$(Build.BuildId)\config.js"
      $content = "window.config = { CREDENTIALS_API_STATUS:'https://app-waverify-api-dev.azurewebsites.net', CREDENTIALS_API_QR:'https://app-waverify-api-dev.azurewebsites.net', CREDENTIALS_GA_DEPARTMENT: ''};"
      echo $content | Set-Content $config_dest;

#- task: AzureRmWebAppDeployment@4
#  inputs:
#    ConnectionType: 'AzureRM'
#    azureSubscription: 'doh-sub-vaccs-01 (c47773b2-99d9-4614-8b2c-737ab9ec3e73)-1813'
#    appType: 'webApp'
#    WebAppName: 'app-waverify-ui-dev'
#    packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'